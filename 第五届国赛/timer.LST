C51 COMPILER V9.01   TIMER                                                                 05/13/2018 20:10:15 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN timer.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE timer.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "timer.h"
   2          #include "dig.h"
   3          #include "string.h"
   4          extern uchar receive[7];
   5          extern bit wet_flag, temp_flag, light_flag, send_flag;
   6          extern uint times;
   7          void Timer0Init(void)           //1毫秒@11.0592MHz
   8          {
   9   1              AUXR |= 0x80;           //定时器时钟1T模式
  10   1              TMOD &= 0xF0;           //设置定时器模式
  11   1              TL0 = 0xCD;             //设置定时初值
  12   1              TH0 = 0xD4;             //设置定时初值
  13   1              TF0 = 0;                //清除TF0标志
  14   1              TR0 = 1;                //定时器0开始计时
  15   1              ET0 = 1;
  16   1              EA = 1;
  17   1      }
  18          void UartInit(void)             //1200bps@11.0592MHz
  19          {
  20   1              SCON = 0x50;            //8位数据,可变波特率
  21   1              AUXR |= 0x04;           //定时器2时钟为Fosc,即1T
  22   1              T2L = 0x00;             //设定定时初值
  23   1              T2H = 0xF7;             //设定定时初值
  24   1              AUXR |= 0x01;           //串口1选择定时器2为波特率发生器
  25   1              AUXR |= 0x10;           //启动定时器2
  26   1              ES = 1;
  27   1      }
  28          void Timer1Init(void)           //1毫秒@11.0592MHz
  29          {
  30   1              AUXR |= 0x40;           //定时器时钟1T模式
  31   1              TMOD &= 0x0F;           //设置定时器模式
  32   1              TL1 = 0xCD;             //设置定时初值
  33   1              TH1 = 0xD4;             //设置定时初值
  34   1              TF1 = 0;                //清除TF1标志
  35   1              TR1 = 0;                //定时器1开始计时
  36   1              ET1 = 1;
  37   1      }
  38          
  39          void Timer1_ISR() interrupt 3
  40          {
  41   1              static uint ii = 0;
  42   1              ii++;
  43   1              if(ii>=999)
  44   1              {
  45   2                      ii = 0;
  46   2                      times++;        
  47   2              }       
  48   1      }
  49          
  50          
  51          uchar rec_flag = 0;
  52          void Usart1_ISR() interrupt 4
  53          {
  54   1              if(RI == 1)
  55   1              {
C51 COMPILER V9.01   TIMER                                                                 05/13/2018 20:10:15 PAGE 2   

  56   2                      RI = 0;
  57   2                      receive[rec_flag] = SBUF;
  58   2                      if(++rec_flag == 6)
  59   2                              rec_flag = 0;
  60   2              }
  61   1      }
  62          
  63          void Send_String(uchar *str)
  64          {
  65   1              uchar *p = str;
  66   1              while(*p)
  67   1              {
  68   2                      SBUF = *p;
  69   2                      while(TI == 0);
  70   2                      TI = 0;
  71   2                      p++;
  72   2              }
  73   1      }
  74          void Timer0_ISR() interrupt 1
  75          {                                       
  76   1              static uint i = 0, j = 0;
  77   1              if(wet_flag == 0)
  78   1                      i++;
  79   1              if(send_flag == 0)
  80   1                      j++;
  81   1              if(i>=431)
  82   1              {
  83   2                      i = 0;
  84   2                      wet_flag = 1;
  85   2              }
  86   1              if(j>=998)
  87   1              {
  88   2                      j = 0;
  89   2                      send_flag = 1;
  90   2              }
  91   1              display();
  92   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    280    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
